<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

	<!-- resultMap: 조회된 result set의 컬럼명과 VO의 필드명이 같지 않을 때 매칭시키는 역할 -->
	<resultMap type="Member" id="member_rm">
		<!-- DB의 기본 키 -->
		<id property="memberNo" column="MEM_NO"/>
		
		<!-- DB의 일반 컬럼들 -->
   		<result property="memberEmail" column="MEM_EMAIL"/>
  		<result property="memberPwd" column="MEM_PW"/>
  		<result property="memberName" column="MEM_NAME"/>
  		<result property="memberNick" column="MEM_NICK"/>
  		<result property="memberPhone" column="MEM_PHONE"/>
  		<result property="memberAddress" column="MEM_ADDR"/>
  		<result property="memberGrade" column="MEM_GRADE"/>
  		<result property="memberType" column="MEM_TYPE"/>
  		<result property="memberSec" column="MEM_SEC"/>
	</resultMap>
	
	
	<!-- resultMap: 조회된 result set의 컬럼명과 VO의 필드명이 같지 않을 때 매칭시키는 역할 -->
	<resultMap type="ProfileImg" id="profileImg_rm">
		<!-- DB의 기본 키 -->
		<id property="pfNo" column="PF_NO"/>
		
		<!-- DB의 일반 컬럼들 -->
   		<result property="pfPath" column="PF_PATH"/>
  		<result property="pfName" column="PF_NAME"/>
  		<result property="memberNo" column="MEM_NO"/>
	</resultMap>
	
	
	<!-- 로그인 -->
	<select id="loginAction" parameterType="Member" resultMap="member_rm">
		SELECT * 
		FROM MEMBER
		WHERE MEM_EMAIL = #{memberEmail} 
		AND MEM_SEC = 'N'
	</select>
	
	<!-- 카카오톡 닉네임 체크 -->
	<select id="nickCheck" parameterType="Member" resultType="_int">
		SELECT COUNT(MEM_NICK)
		FROM MEMBER
		WHERE MEM_EMAIL = #{memberEmail}
	</select>
	
	<!-- 카카오톡 회원가입 -->
	<insert id="kakaoSignUp" parameterType="Member">
		INSERT INTO MEMBER(MEM_NO, MEM_EMAIL, MEM_PW, MEM_NICK, MEM_GRADE, MEM_TYPE, MEM_SEC) 
		VALUES(SEQ_MNO.NEXTVAL, #{memberEmail}, #{memberPwd}, #{memberNick}, 'G', 'K', DEFAULT)
	</insert>
	
	<!-- 카카오톡 로그인 -->
	<select id="kakaoLogin" parameterType="Member" resultMap="member_rm">
		SELECT * 
		FROM MEMBER
		WHERE MEM_TYPE = 'K' AND MEM_EMAIL = #{memberEmail}
	</select>
	
	<!-- 이메일 찾기 -->
	<select id="findEmail" parameterType="Member" resultType="string">
		SELECT MEM_EMAIL
		FROM MEMBER
		WHERE MEM_NAME = #{memberName} AND MEM_PHONE = #{memberPhone} AND MEM_TYPE = 'G'
	</select>
	
	<!-- 토큰 삽입 -->
	<update id="inputToken" parameterType="Member">
		UPDATE MEMBER SET MEM_PW = #{memberPwd} WHERE MEM_EMAIL = #{memberEmail}
	</update>
	
	<!-- 이메일 중복 체크 -->
	<select id="checkEmail" parameterType="Member" resultType="_int">
		SELECT COUNT(MEM_EMAIL)
		FROM MEMBER
		WHERE MEM_EMAIL = #{memberEmail}
	</select>
	
	<!-- 일반 회원 가입 -->
	<insert id="signUp" parameterType="Member">
		INSERT INTO MEMBER(MEM_NO, MEM_EMAIL, MEM_PW, MEM_NAME, MEM_NICK, MEM_PHONE, MEM_GRADE, MEM_TYPE, MEM_SEC)
		VALUES(SEQ_MNO.NEXTVAL, #{memberEmail}, #{memberPwd}, #{memberName}, #{memberPhone}, #{memberNick}, 'G', 'G', DEFAULT)
	</insert>
	
	<!-- 회원 번호 조회 -->
	<select id="checkMemNo" parameterType="Member" resultType="_int">
		SELECT MEM_NO
		FROM MEMBER
		WHERE MEM_EMAIL = #{memberEmail}
	</select>
	
	<!-- 회원 사진 삽입 -->
	<insert id="insertImg" parameterType="ProfileImg">
		INSERT INTO PROFILE_IMG VALUES(SEQ_PNO.NEXTVAL, #{pfPath}, #{pfName}, #{memberNo})
	</insert>
	
	<!-- 카카오 회원 정보 추가 -->
	<update id="addMoreInfo" parameterType="Member">
		UPDATE MEMBER SET MEM_NAME = #{memberName}, MEM_PHONE = #{memberPhone} WHERE MEM_EMAIL = #{memberEmail}
	</update>
	
	
	
	
	
	
	
	
	
</mapper>