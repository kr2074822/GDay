<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="messageMapper">

	<!-- resultMap: 조회된 result set의 컬럼명과 VO의 필드명이 같지 않을 때 매칭시키는 역할 -->
	<resultMap type="Message" id="message_rm">
		<!-- DB의 기본 키 -->
		<id property="msgNo" column="MSG_NO"/>
		
		<!-- DB의 일반 컬럼들 -->
   		<result property="msgContent" column="MSG_CONTENT"/>
  		<result property="msgDate" column="MSG_DATE"/>
  		<result property="msgStatus" column="MSG_STATUS"/>
  		<result property="me" column="SENDER"/>
  		<result property="you" column="GETTER"/>
  		
  		<result property="memNick" column="MEM_NICK"/>
	</resultMap>
	
	<!-- 목록 불러오기 -->
	<select id="messageList" parameterType="Message" resultMap="message_rm">
		SELECT GETTER, MEM_NICK, MIN(MSG_STATUS) AS MSG_STATUS, MAX(MSG_DATE) AS MSG_DATE
		FROM MESSAGE
		JOIN MEMBER ON (GETTER = MEM_NO)
		WHERE GETTER != #{memNo}
		GROUP BY GETTER, MEM_NICK
		ORDER BY MSG_DATE DESC
	</select>
	
	<!-- 채팅 불러오기 -->
	<select id="chatList"  parameterType="map" resultType="map">
		SELECT MSG_DATE ,SENDER, GETTER ,MSG_STATUS, MEM_NICK, MSG_CONTENT
		FROM MESSAGE
		JOIN MEMBER ON (GETTER = MEM_NO)
		WHERE (SENDER = #{memNo} AND GETTER = #{getter}) OR (SENDER = #{getter} AND GETTER = #{memNo})
		ORDER BY MSG_DATE
	</select>
	
	<!-- 메시지 보내기 -->
	<insert id="sendMsg" parameterType="map">
		INSERT INTO MESSAGE VALUES(SEQ_MSGNO.NEXTVAL, #{myMsg}, SYSDATE, 0, #{getter}, #{memNo})
	</insert>
	
	<!-- 읽음 처리 -->
	<update id="read" parameterType="map">
			UPDATE MESSAGE SET MSG_STATUS = 1 WHERE (SENDER = #{memNo} AND GETTER = #{getter}) OR (SENDER = #{getter} AND GETTER = #{memNo})
	</update>
	
	<!-- 메시지 보내기 -->
	<insert id="gcMsg" parameterType="Message">
		INSERT INTO MESSAGE VALUES(SEQ_MSGNO.NEXTVAL, #{msgContent}, SYSDATE, 0, #{you}, #{me})
	</insert>
	
	
</mapper>